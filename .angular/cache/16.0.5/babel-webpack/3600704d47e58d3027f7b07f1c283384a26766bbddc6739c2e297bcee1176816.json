{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/55219/Desktop/Studio-Val-em-conclusao/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/newsletter.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction FormularioComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"O campo de email n\\u00E3o pode estar vazio.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormularioComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r3.errorMessage, \" \", ctx_r3.successMessage, \" \");\n  }\n}\nclass FormularioComponent {\n  constructor(newsletterService) {\n    this.newsletterService = newsletterService;\n    this.newsletter = {\n      email: ''\n    };\n    this.errorMessage = '';\n    this.successMessage = '';\n  }\n  ngOnInit() {}\n  onSubmit(newsletterForm) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // Limpar mensagens existentes\n      _this.errorMessage = '';\n      _this.successMessage = '';\n      try {\n        const docId = yield _this.newsletterService.addNewsletter(_this.newsletter);\n        console.log(`Documento adicionado com sucesso: ${docId}`);\n        _this.successMessage = 'Email cadastrado com sucesso!';\n        // Redefina newsletter.email somente se a operação for bem-sucedida\n        _this.newsletter.email = '';\n        setTimeout(() => {\n          _this.successMessage = '';\n        }, 10000);\n      } catch (error) {\n        console.error(error);\n        // Exibe uma mensagem de erro na tela\n        _this.errorMessage = 'O email já está cadastrado.';\n        setTimeout(() => {\n          _this.errorMessage = '';\n        }, 10000);\n      }\n    })();\n  }\n}\nFormularioComponent.ɵfac = function FormularioComponent_Factory(t) {\n  return new (t || FormularioComponent)(i0.ɵɵdirectiveInject(i1.NewsletterService));\n};\nFormularioComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormularioComponent,\n  selectors: [[\"app-formulario\"]],\n  decls: 11,\n  vars: 4,\n  consts: [[1, \"appformulariocss\"], [\"ngNativeValidate\", \"\", 1, \"\", 3, \"ngSubmit\"], [\"newsletterForm\", \"ngForm\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"minlength\", \"1\", \"required\", \"\", \"email\", \"\", \"placeholder\", \"Insira seu melhor e-mail\", 3, \"ngModel\", \"ngModelChange\"], [\"emailInput\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [4, \"ngIf\"], [\"class\", \"text-danger\", \"id\", \"alteracormsg\", 4, \"ngIf\"], [\"id\", \"alteracormsg\", 1, \"text-danger\"]],\n  template: function FormularioComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r4 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1, 2);\n      i0.ɵɵlistener(\"ngSubmit\", function FormularioComponent_Template_form_ngSubmit_1_listener() {\n        i0.ɵɵrestoreView(_r4);\n        const _r0 = i0.ɵɵreference(2);\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(3, \"h4\");\n      i0.ɵɵtext(4, \"RECEBA NOSSAS NOVIDADES\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 3, 4);\n      i0.ɵɵlistener(\"ngModelChange\", function FormularioComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.newsletter.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"button\", 5);\n      i0.ɵɵtext(8, \" Inscreva-se \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(9, FormularioComponent_div_9_Template, 2, 0, \"div\", 6);\n      i0.ɵɵtemplate(10, FormularioComponent_div_10_Template, 2, 2, \"div\", 7);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(2);\n      const _r1 = i0.ɵɵreference(6);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.newsletter.email);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", _r0.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r1.invalid && (_r1.errors == null ? null : _r1.errors[\"minlength\"]));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorMessage || ctx.successMessage);\n    }\n  },\n  dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.MinLengthValidator, i3.EmailValidator, i3.NgModel, i3.NgForm],\n  styles: [\".appformulariocss[_ngcontent-%COMP%] {\\r\\n  padding-top: 1%;\\r\\n  padding-bottom: 1.5%;\\r\\n  background-color: #696968;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n#alteracormsg[_ngcontent-%COMP%] {\\r\\n  color: antiquewhite !important;\\r\\n}\\r\\n\\r\\n.container[_ngcontent-%COMP%] {\\r\\n  padding: 0.8%;\\r\\n}\\r\\n\\r\\n\\r\\n  \\r\\n\\r\\n\\r\\ninput[_ngcontent-%COMP%] {\\r\\n  width: 20vw;\\r\\n  max-width: 350px;\\r\\n  height: 40px;\\r\\n  border-radius: 8px;\\r\\n  color: black;\\r\\n  padding-left: 0.4%;\\r\\n}\\r\\n\\r\\n@media screen and (min-height:330px) and (max-height:800px) {\\r\\n  .appformulariocss[_ngcontent-%COMP%] {\\r\\n    padding-bottom: 2.5%;\\r\\n  }\\r\\n}\\r\\n\\r\\ninput[_ngcontent-%COMP%] {\\r\\n  width: 40vw;\\r\\n}\\r\\n\\r\\nh4[_ngcontent-%COMP%] {\\r\\n  color: blanchedalmond;\\r\\n  font-weight: 800;\\r\\n  font-size: 1.4em;\\r\\n  font-family: 'Nerko One', cursive;\\r\\n}\\r\\n\\r\\nbutton[disabled][_ngcontent-%COMP%] {\\r\\n  background-color: grey;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50ZXMvZm9ybXVsYXJpby9mb3JtdWxhcmlvLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkJBQTZCOztBQUU3QjtFQUNFLGVBQWU7RUFDZixvQkFBb0I7RUFDcEIseUJBQXlCO0VBQ3pCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLDhCQUE4QjtBQUNoQzs7QUFFQTtFQUNFLGFBQWE7QUFDZjs7QUFFQSxZQUFZO0VBQ1YsNkRBQTZEOzs7QUFHL0Q7RUFDRSxXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsWUFBWTtFQUNaLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFO0lBQ0Usb0JBQW9CO0VBQ3RCO0FBQ0Y7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixpQ0FBaUM7QUFDbkM7O0FBRUE7RUFDRSxzQkFBc0I7QUFDeEIiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBmb3JtdWxhcmlvLmNvbXBvbmVudC5jc3MgKi9cclxuXHJcbi5hcHBmb3JtdWxhcmlvY3NzIHtcclxuICBwYWRkaW5nLXRvcDogMSU7XHJcbiAgcGFkZGluZy1ib3R0b206IDEuNSU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzY5Njk2ODtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbiNhbHRlcmFjb3Jtc2cge1xyXG4gIGNvbG9yOiBhbnRpcXVld2hpdGUgIWltcG9ydGFudDtcclxufVxyXG5cclxuLmNvbnRhaW5lciB7XHJcbiAgcGFkZGluZzogMC44JTtcclxufVxyXG5cclxuLyogZm9ybSB7fSAqL1xyXG4gIC8qIFBvZGUgaW5zZXJpciBxdWFpc3F1ZXIgcmVncmFzIENTUyBwYXJhIG8gZm9ybXVsw4PCoXJpbyBhcXVpICovXHJcblxyXG5cclxuaW5wdXQge1xyXG4gIHdpZHRoOiAyMHZ3O1xyXG4gIG1heC13aWR0aDogMzUwcHg7XHJcbiAgaGVpZ2h0OiA0MHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICBjb2xvcjogYmxhY2s7XHJcbiAgcGFkZGluZy1sZWZ0OiAwLjQlO1xyXG59XHJcblxyXG5AbWVkaWEgc2NyZWVuIGFuZCAobWluLWhlaWdodDozMzBweCkgYW5kIChtYXgtaGVpZ2h0OjgwMHB4KSB7XHJcbiAgLmFwcGZvcm11bGFyaW9jc3Mge1xyXG4gICAgcGFkZGluZy1ib3R0b206IDIuNSU7XHJcbiAgfVxyXG59XHJcblxyXG5pbnB1dCB7XHJcbiAgd2lkdGg6IDQwdnc7XHJcbn1cclxuXHJcbmg0IHtcclxuICBjb2xvcjogYmxhbmNoZWRhbG1vbmQ7XHJcbiAgZm9udC13ZWlnaHQ6IDgwMDtcclxuICBmb250LXNpemU6IDEuNGVtO1xyXG4gIGZvbnQtZmFtaWx5OiAnTmVya28gT25lJywgY3Vyc2l2ZTtcclxufVxyXG5cclxuYnV0dG9uW2Rpc2FibGVkXSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JleTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});\nexport { FormularioComponent };","map":{"version":3,"mappings":"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","names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","ctx_r3","errorMessage","successMessage","FormularioComponent","constructor","newsletterService","newsletter","email","ngOnInit","onSubmit","newsletterForm","_this","_asyncToGenerator","docId","addNewsletter","console","log","setTimeout","error","ɵɵdirectiveInject","i1","NewsletterService","selectors","decls","vars","consts","template","FormularioComponent_Template","rf","ctx","ɵɵlistener","FormularioComponent_Template_form_ngSubmit_1_listener","ɵɵrestoreView","_r4","_r0","ɵɵreference","ɵɵresetView","FormularioComponent_Template_input_ngModelChange_5_listener","$event","ɵɵtemplate","FormularioComponent_div_9_Template","FormularioComponent_div_10_Template","ɵɵproperty","invalid","_r1","errors"],"sourceRoot":"","sources":["C:\\Users\\55219\\Desktop\\Studio-Val-em-conclusao\\src\\app\\componentes\\formulario\\formulario.component.html","C:\\Users\\55219\\Desktop\\Studio-Val-em-conclusao\\src\\app\\componentes\\formulario\\formulario.component.ts"],"sourcesContent":["<!-- formulario.component.html -->\r\n\r\n<div class=\"appformulariocss\">\r\n  <form ngNativeValidate #newsletterForm=\"ngForm\" (ngSubmit)=\"onSubmit(newsletterForm)\" class=\"\">\r\n    <h4>RECEBA NOSSAS NOVIDADES</h4>\r\n    <input type=\"email\" id=\"email\" name=\"email\" [(ngModel)]=\"newsletter.email\" #emailInput=\"ngModel\" minlength=\"1\"\r\n      required email placeholder=\"Insira seu melhor e-mail\" />\r\n    <button type=\"submit\" [disabled]=\"newsletterForm.invalid\" class=\"btn btn-primary\">\r\n      Inscreva-se\r\n    </button>\r\n    <div *ngIf=\"emailInput.invalid && emailInput.errors?.['minlength']\">O campo de email não pode estar vazio.</div>\r\n    <div *ngIf=\"errorMessage || successMessage\" class=\"text-danger\" id=\"alteracormsg\">{{ errorMessage }} {{\r\n      successMessage\r\n      }} </div>\r\n  </form>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<!-- <div class=\"appformulariocss\">\r\n<div class=\"search-text\">\r\n  <div class=\"container\">\r\n    <div class=\"row text-center\">\r\n      <div class=\"form\">\r\n        <form\r\n\r\n          ngNativeValidate\r\n          #newsletterForm=\"ngForm\"\r\n          (ngSubmit)=\"onSubmit(newsletterForm)\"\r\n          id=\"search-form\"\r\n          class=\"form-search form-horizontal\"\r\n        >\r\n          <h4>RECEBA NOSSAS NOVIDADES</h4>\r\n\r\n\r\n            <input class=\"input-search\"\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              [(ngModel)]=\"newsletter.email\"\r\n              #emailInput=\"ngModel\"\r\n            />\r\n\r\n            <div *ngIf=\"emailInput.invalid && (emailInput.dirty || emailInput.touched)\"></div>\r\n\r\n\r\n\r\n          <button type=\"submit\" [disabled]=\"newsletterForm.invalid\" class=\"btn btn-primary\">\r\n            Inscreva-se\r\n          </button>\r\n          <div *ngIf=\"errorMessage || successMessage\" class=\"text-danger\" id=\"alteracormsg\">{{ errorMessage }} {{ successMessage }} </div>\r\n        </form>\r\n\r\n      </div>\r\n      <form-->\r\n    <!-- </div> -->\r\n    <!--row text-center-->\r\n  <!-- </div> -->\r\n  <!--container-->\r\n<!-- </div> -->\r\n<!--search-text-->\r\n\r\n<!-- </div> -->\r\n<!--appformulariocss-->\r\n\r\n","// formulario.component.ts\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Newsletter } from 'src/app/newsletter';\r\nimport { NewsletterService } from 'src/app/services/newsletter.service';\r\n\r\n@Component({\r\n  selector: 'app-formulario',\r\n  templateUrl: './formulario.component.html',\r\n  styleUrls: ['./formulario.component.css']\r\n})\r\nexport class FormularioComponent implements OnInit {\r\n  newsletter: Newsletter = { email: '' };\r\n  errorMessage: string = '';\r\n  successMessage: string = '';\r\n\r\n  constructor(private newsletterService: NewsletterService) { }\r\n\r\n  ngOnInit(): void { }\r\n\r\n  async onSubmit(newsletterForm: NgForm) {\r\n    // Limpar mensagens existentes\r\n    this.errorMessage = '';\r\n    this.successMessage = '';\r\n\r\n    try {\r\n      const docId = await this.newsletterService.addNewsletter(this.newsletter);\r\n      console.log(`Documento adicionado com sucesso: ${docId}`);\r\n      this.successMessage = 'Email cadastrado com sucesso!';\r\n      // Redefina newsletter.email somente se a operação for bem-sucedida\r\n      this.newsletter.email = '';\r\n      setTimeout(() => {\r\n        this.successMessage = '';\r\n      }, 10000);\r\n    } catch (error) {\r\n      console.error(error);\r\n      // Exibe uma mensagem de erro na tela\r\n      this.errorMessage = 'O email já está cadastrado.';\r\n      setTimeout(() => {\r\n        this.errorMessage = '';\r\n      }, 10000);\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}