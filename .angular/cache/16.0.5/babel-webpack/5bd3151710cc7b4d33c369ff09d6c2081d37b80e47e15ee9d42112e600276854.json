{"ast":null,"code":"import { ɵgetAllInstancesOf, ɵgetDefaultInstanceOf, VERSION, ɵAngularFireSchedulers, ɵzoneWrap } from '@angular/fire';\nimport { timer, from } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Optional, PLATFORM_ID, NgModule, NgZone, Injector } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { registerVersion } from 'firebase/app';\nimport { isPlatformBrowser } from '@angular/common';\nimport { traceUntil as traceUntil$1, traceWhile as traceWhile$1, traceUntilComplete as traceUntilComplete$1, traceUntilFirst as traceUntilFirst$1 } from 'rxfire/performance';\nimport { getPerformance as getPerformance$1, initializePerformance as initializePerformance$1, trace as trace$1 } from 'firebase/performance';\nexport * from 'firebase/performance';\nclass Performance {\n  constructor(performance) {\n    return performance;\n  }\n}\nconst PERFORMANCE_PROVIDER_NAME = 'performance';\nclass PerformanceInstances {\n  constructor() {\n    return ɵgetAllInstancesOf(PERFORMANCE_PROVIDER_NAME);\n  }\n}\nconst performanceInstance$ = timer(0, 300).pipe(concatMap(() => from(ɵgetAllInstancesOf(PERFORMANCE_PROVIDER_NAME))), distinct());\nconst PROVIDED_PERFORMANCE_INSTANCES = new InjectionToken('angularfire2.performance-instances');\nfunction defaultPerformanceInstanceFactory(provided, defaultApp,\n// tslint:disable-next-line:ban-types\nplatform) {\n  if (!isPlatformBrowser(platform)) {\n    return null;\n  }\n  const defaultPerformance = ɵgetDefaultInstanceOf(PERFORMANCE_PROVIDER_NAME, provided, defaultApp);\n  return defaultPerformance && new Performance(defaultPerformance);\n}\nfunction performanceInstanceFactory(fn) {\n  // tslint:disable-next-line:ban-types\n  return (zone, platform, injector) => {\n    if (!isPlatformBrowser(platform)) {\n      return null;\n    }\n    const performance = zone.runOutsideAngular(() => fn(injector));\n    return new Performance(performance);\n  };\n}\nconst PERFORMANCE_INSTANCES_PROVIDER = {\n  provide: PerformanceInstances,\n  deps: [[new Optional(), PROVIDED_PERFORMANCE_INSTANCES]]\n};\nconst DEFAULT_PERFORMANCE_INSTANCE_PROVIDER = {\n  provide: Performance,\n  useFactory: defaultPerformanceInstanceFactory,\n  deps: [[new Optional(), PROVIDED_PERFORMANCE_INSTANCES], FirebaseApp, PLATFORM_ID]\n};\nclass PerformanceModule {\n  constructor() {\n    registerVersion('angularfire', VERSION.full, 'perf');\n  }\n}\nPerformanceModule.ɵfac = function PerformanceModule_Factory(t) {\n  return new (t || PerformanceModule)();\n};\nPerformanceModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: PerformanceModule\n});\nPerformanceModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [DEFAULT_PERFORMANCE_INSTANCE_PROVIDER, PERFORMANCE_INSTANCES_PROVIDER]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(PerformanceModule, [{\n    type: NgModule,\n    args: [{\n      providers: [DEFAULT_PERFORMANCE_INSTANCE_PROVIDER, PERFORMANCE_INSTANCES_PROVIDER]\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nfunction providePerformance(fn, ...deps) {\n  return {\n    ngModule: PerformanceModule,\n    providers: [{\n      provide: PROVIDED_PERFORMANCE_INSTANCES,\n      useFactory: performanceInstanceFactory(fn),\n      multi: true,\n      deps: [NgZone, PLATFORM_ID, Injector, ɵAngularFireSchedulers, FirebaseApps, ...deps]\n    }]\n  };\n}\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst traceUntil = ɵzoneWrap(traceUntil$1, true);\nconst traceWhile = ɵzoneWrap(traceWhile$1, true);\nconst traceUntilComplete = ɵzoneWrap(traceUntilComplete$1, true);\nconst traceUntilFirst = ɵzoneWrap(traceUntilFirst$1, true);\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst getPerformance = ɵzoneWrap(getPerformance$1, true);\nconst initializePerformance = ɵzoneWrap(initializePerformance$1, true);\nconst trace = ɵzoneWrap(trace$1, true);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Performance, PerformanceInstances, PerformanceModule, getPerformance, initializePerformance, performanceInstance$, providePerformance, trace, traceUntil, traceUntilComplete, traceUntilFirst, traceWhile };","map":{"version":3,"names":["ɵgetAllInstancesOf","ɵgetDefaultInstanceOf","VERSION","ɵAngularFireSchedulers","ɵzoneWrap","timer","from","concatMap","distinct","i0","InjectionToken","Optional","PLATFORM_ID","NgModule","NgZone","Injector","FirebaseApp","FirebaseApps","registerVersion","isPlatformBrowser","traceUntil","traceUntil$1","traceWhile","traceWhile$1","traceUntilComplete","traceUntilComplete$1","traceUntilFirst","traceUntilFirst$1","getPerformance","getPerformance$1","initializePerformance","initializePerformance$1","trace","trace$1","Performance","constructor","performance","PERFORMANCE_PROVIDER_NAME","PerformanceInstances","performanceInstance$","pipe","PROVIDED_PERFORMANCE_INSTANCES","defaultPerformanceInstanceFactory","provided","defaultApp","platform","defaultPerformance","performanceInstanceFactory","fn","zone","injector","runOutsideAngular","PERFORMANCE_INSTANCES_PROVIDER","provide","deps","DEFAULT_PERFORMANCE_INSTANCE_PROVIDER","useFactory","PerformanceModule","full","ɵfac","PerformanceModule_Factory","t","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","providers","ngDevMode","ɵsetClassMetadata","args","providePerformance","ngModule","multi"],"sources":["C:/Users/55219/Desktop/Studio-Val-em-conclusao/node_modules/@angular/fire/fesm2015/angular-fire-performance.js"],"sourcesContent":["import { ɵgetAllInstancesOf, ɵgetDefaultInstanceOf, VERSION, ɵAngularFireSchedulers, ɵzoneWrap } from '@angular/fire';\nimport { timer, from } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Optional, PLATFORM_ID, NgModule, NgZone, Injector } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { registerVersion } from 'firebase/app';\nimport { isPlatformBrowser } from '@angular/common';\nimport { traceUntil as traceUntil$1, traceWhile as traceWhile$1, traceUntilComplete as traceUntilComplete$1, traceUntilFirst as traceUntilFirst$1 } from 'rxfire/performance';\nimport { getPerformance as getPerformance$1, initializePerformance as initializePerformance$1, trace as trace$1 } from 'firebase/performance';\nexport * from 'firebase/performance';\n\nclass Performance {\n    constructor(performance) {\n        return performance;\n    }\n}\nconst PERFORMANCE_PROVIDER_NAME = 'performance';\nclass PerformanceInstances {\n    constructor() {\n        return ɵgetAllInstancesOf(PERFORMANCE_PROVIDER_NAME);\n    }\n}\nconst performanceInstance$ = timer(0, 300).pipe(concatMap(() => from(ɵgetAllInstancesOf(PERFORMANCE_PROVIDER_NAME))), distinct());\n\nconst PROVIDED_PERFORMANCE_INSTANCES = new InjectionToken('angularfire2.performance-instances');\nfunction defaultPerformanceInstanceFactory(provided, defaultApp, \n// tslint:disable-next-line:ban-types\nplatform) {\n    if (!isPlatformBrowser(platform)) {\n        return null;\n    }\n    const defaultPerformance = ɵgetDefaultInstanceOf(PERFORMANCE_PROVIDER_NAME, provided, defaultApp);\n    return defaultPerformance && new Performance(defaultPerformance);\n}\nfunction performanceInstanceFactory(fn) {\n    // tslint:disable-next-line:ban-types\n    return (zone, platform, injector) => {\n        if (!isPlatformBrowser(platform)) {\n            return null;\n        }\n        const performance = zone.runOutsideAngular(() => fn(injector));\n        return new Performance(performance);\n    };\n}\nconst PERFORMANCE_INSTANCES_PROVIDER = {\n    provide: PerformanceInstances,\n    deps: [\n        [new Optional(), PROVIDED_PERFORMANCE_INSTANCES],\n    ]\n};\nconst DEFAULT_PERFORMANCE_INSTANCE_PROVIDER = {\n    provide: Performance,\n    useFactory: defaultPerformanceInstanceFactory,\n    deps: [\n        [new Optional(), PROVIDED_PERFORMANCE_INSTANCES],\n        FirebaseApp,\n        PLATFORM_ID,\n    ]\n};\nclass PerformanceModule {\n    constructor() {\n        registerVersion('angularfire', VERSION.full, 'perf');\n    }\n}\nPerformanceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: PerformanceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nPerformanceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: PerformanceModule });\nPerformanceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: PerformanceModule, providers: [\n        DEFAULT_PERFORMANCE_INSTANCE_PROVIDER,\n        PERFORMANCE_INSTANCES_PROVIDER,\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.1.3\", ngImport: i0, type: PerformanceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        DEFAULT_PERFORMANCE_INSTANCE_PROVIDER,\n                        PERFORMANCE_INSTANCES_PROVIDER,\n                    ]\n                }]\n        }], ctorParameters: function () { return []; } });\nfunction providePerformance(fn, ...deps) {\n    return {\n        ngModule: PerformanceModule,\n        providers: [{\n                provide: PROVIDED_PERFORMANCE_INSTANCES,\n                useFactory: performanceInstanceFactory(fn),\n                multi: true,\n                deps: [\n                    NgZone,\n                    PLATFORM_ID,\n                    Injector,\n                    ɵAngularFireSchedulers,\n                    FirebaseApps,\n                    ...deps,\n                ]\n            }]\n    };\n}\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst traceUntil = ɵzoneWrap(traceUntil$1, true);\nconst traceWhile = ɵzoneWrap(traceWhile$1, true);\nconst traceUntilComplete = ɵzoneWrap(traceUntilComplete$1, true);\nconst traceUntilFirst = ɵzoneWrap(traceUntilFirst$1, true);\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst getPerformance = ɵzoneWrap(getPerformance$1, true);\nconst initializePerformance = ɵzoneWrap(initializePerformance$1, true);\nconst trace = ɵzoneWrap(trace$1, true);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Performance, PerformanceInstances, PerformanceModule, getPerformance, initializePerformance, performanceInstance$, providePerformance, trace, traceUntil, traceUntilComplete, traceUntilFirst, traceWhile };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}